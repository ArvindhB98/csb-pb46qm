{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojiWeKnow","Object","keys","App","useState","meaning","setmeaning","className","onChange","event","userInput","target","value","undefined","map","emoji","onClick","emojiClick","style","fontSize","padding","cursor","rootElement","document","getElementById","createRoot","render"],"mappings":"iMAGIA,EAAkB,CACpB,eAAM,gBACN,eAAM,2DACN,eAAM,gCACN,eAAM,qDACN,eAAM,gCACN,eAAM,mBACN,eAAM,aACN,eAAM,aACN,eAAM,+BACN,eAAM,8CACN,eAAM,+BACN,eAAM,oBAEJC,EAAcC,OAAOC,KAAKH,GAEf,SAASI,IACtB,MAA8BC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KAe1B,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,sBACJ,uBAAOC,SAhBX,SAAyBC,GACvB,IAAIC,EAAYD,EAAME,OAAOC,MACzBP,EAAUN,EAAgBW,GAC9BJ,EAAWD,QACKQ,IAAZR,IACFA,EAAU,sCAEd,IAUI,sBAAKE,UAAU,UAAS,UAAC,IAAEF,KAC3B,6BAAI,oBACHL,EAAYc,KAAI,SAAUC,GACzB,OACE,sBACEC,QAAS,kBAdnB,SAAoBD,GAElBT,EADcP,EAAgBgB,GAEhC,CAWyBE,CAAWF,EAAM,EAChCG,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAAY,SAGjEN,GAFIA,EAKX,MAGN,CCjDA,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACvB,EAAG,M","file":"static/js/main.d33ad82c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nvar emojiDictionary = {\n  \"üòÄ\": \"Grinning face\",\n  \"üòÑ\": \"Grinning face with smiling eyes, happy face, smiley face\",\n  \"üòÜ\": \"Grinning squinting face emoji\",\n  \"üòÖ\": \"Phew emoji, grinning face with sweat, relief emoji\",\n  \"ü§£\": \"Rolling on the floor laughing\",\n  \"üôÉ\": \"Upside down face\",\n  \"üòâ\": \"Winky face\",\n  \"üòç\": \"Heart eyes\",\n  \"üòú\": \"Stuck out tongue winking eye\",\n  \"ü§î\": \"Depicts going into a deep state of thinking\",\n  \"ü§ë\": \"Dollar sign eyes, money face\",\n  \"üò¥\": \"Sleepy, Zzz face\"\n};\nvar emojiWeKnow = Object.keys(emojiDictionary);\n\nexport default function App() {\n  const [meaning, setmeaning] = useState(\"\");\n\n  function onChangeHandler(event) {\n    var userInput = event.target.value;\n    var meaning = emojiDictionary[userInput];\n    setmeaning(meaning);\n    if (meaning === undefined) {\n      meaning = \"We don't have this in our Database.\";\n    }\n  }\n  function emojiClick(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setmeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Emoji Interpreter</h1>\n      <input onChange={onChangeHandler} />\n      <div className=\"meaning\"> {meaning}</div>\n      <h2> Emojis we know</h2>\n      {emojiWeKnow.map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClick(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}